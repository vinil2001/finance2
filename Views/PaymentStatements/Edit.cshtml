@model Finance.Models.PaymentStatement

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="MenuBar">
    @Html.Partial("MenuBar", "PaymentStatements")
</div>

@if (!User.IsInRole("Developer"))
{
    <script>
        $("#MenuBar").hide();
    </script>
}

<h2>Редактирование</h2>

<div style="float:right;">
    Вы вошли под логином: @User.Identity.Name
</div>

<div>
    @Html.ActionLink("Назад", "Index")
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>PaymentStatement</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @*<div class="form-group">
                @Html.LabelFor(model => model.KltId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.KltId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.KltId, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.InvoiceNumber, "№ Счета", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.InvoiceDate, "Дата счета", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InvoiceDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.InvoiceSumma, "Сумма", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InvoiceSumma, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InvoiceSumma, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Comment, "Комментарий", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.InvoiceChecked, "Проверен", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @if (User.IsInRole("Sign1") || User.IsInRole("Developer"))
                    {
                        @Html.EditorFor(model => model.InvoiceChecked)
                    }
                    else
                    {
                        @*@Html.CheckBoxFor(model => model.InvoiceChecked, new { @disabled = "disabled" })*@
                        @Html.CheckBoxFor(model => model.InvoiceChecked, new { @onclick = "return false;" })
                    }
                    @Html.ValidationMessageFor(model => model.InvoiceChecked, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentApproved, "В оплату", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @if (User.IsInRole("Sign1") || User.IsInRole("Developer"))
                    {
                        @Html.EditorFor(model => model.PaymentApproved)
                    }
                    else
                    {
                        @*@Html.CheckBoxFor(model => model.PaymentApproved, new { @disabled = "disabled" })*@
                        @Html.CheckBoxFor(model => model.PaymentApproved, new { @onclick = "return false;" })
                    }
                    @Html.ValidationMessageFor(model => model.PaymentApproved, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentDone, "Оплачен", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @if (User.IsInRole("Accountant") || User.IsInRole("Sign1") || User.IsInRole("Developer"))
                    {
                        @Html.EditorFor(model => model.PaymentDone)
                    }
                    else
                    {
                        @*@Html.CheckBoxFor(model => model.PaymentDone, new { @disabled = "disabled" })*@
                        @Html.CheckBoxFor(model => model.PaymentDone, new { @onclick = "return false;" })
                    }
                    @Html.ValidationMessageFor(model => model.PaymentDone, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(model => model.DocumentUrl, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <button type="button" onclick="window.open('@Url.Action("GetFileUrl", new { id = Model.Id })')">
                    Открыть счет
                </button>
                <div>
                    @Html.HiddenFor(model => model.DocumentUrl)
                    @*@Html.ValidationMessageFor(model => model.DocumentUrl, "", new { @class = "text-danger" })*@
                </div>

            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад", "Index")
</div>
<script>
    $(function () {
        $("#InvoiceDate").datepicker(
            {
                dateFormat: "dd-mm-yy"
            });

    });
</script>